// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  username      String    @unique
  email         String    @unique
  password      String
  name          String
  contactNumber String
  role          UserRole  @default(USER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  flats         Flat[]
  requests      Request[]

  @@map("user")
}

model Flat {
  id          String    @id @default(uuid())
  location    String
  description String
  rent        Float
  bedrooms    Int
  amenities   String
  photos      String
  postedBy    User      @relation(fields: [postedById], references: [id])
  postedById  String
  requests    Request[]
  createdAt   DateTime  @default(now())

  updatedAt DateTime @updatedAt

  @@map("flat")
}

model Request {
  id        String   @id @default(uuid())
  flatId    String
  userId    String
  status    Status   @default(PENDING)
  message   String
  flat      Flat     @relation(fields: [flatId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("request")
}

enum UserRole {
  ADMIN
  USER
}

enum Status {
  PENDING
  APPROVED
  REJECTED
}
